[
  {
    "number": 1,
    "emoji": "‚öôÔ∏è",
    "title": "O que √© Webpack?",
    "color": "blue",
    "description": "Webpack √© uma ferramenta poderosa chamada 'empacotador de m√≥dulos' (module bundler), usada para agrupar e otimizar os diversos arquivos que comp√µem uma aplica√ß√£o web moderna. Ele pega todos os seus arquivos ‚Äî como JavaScript, CSS, imagens e at√© fontes ‚Äî e combina em um ou mais arquivos otimizados que podem ser carregados rapidamente pelo navegador. Isso melhora a performance da aplica√ß√£o e permite usar recursos avan√ßados, como modulariza√ß√£o, carregamento ass√≠ncrono e transforma√ß√£o de c√≥digo (transpilers)."
  },
  {
    "number": 2,
    "emoji": "üì¶",
    "title": "Como instalar o Webpack?",
    "color": "green",
    "steps": [
      {
        "command": "npm init -y",
        "description": "Este comando cria um arquivo package.json padr√£o no diret√≥rio atual, inicializando seu projeto Node.js com as configura√ß√µes b√°sicas. √â importante para que o npm possa gerenciar as depend√™ncias do seu projeto."
      },
      {
        "command": "npm install --save-dev webpack webpack-cli",
        "description": "Instala o Webpack e sua interface de linha de comando (CLI) como depend√™ncias de desenvolvimento. Isso significa que o Webpack ser√° usado apenas durante o desenvolvimento e constru√ß√£o do projeto, n√£o em produ√ß√£o diretamente."
      }
    ]
  },
  {
    "number": 3,
    "emoji": "üóÇÔ∏è",
    "title": "Estrutura b√°sica do projeto",
    "color": "orange",
    "description": "Para organizar seu projeto, crie uma pasta chamada 'src' onde voc√™ colocar√° o c√≥digo fonte da aplica√ß√£o. O arquivo principal JavaScript geralmente √© chamado de 'index.js'. Essa estrutura ajuda o Webpack a identificar onde come√ßar a an√°lise e empacotamento.",
    "example": {
      "src/index.js": "console.log('Ol√°, Webpack!');"
    }
  },
  {
    "number": 4,
    "emoji": "üìù",
    "title": "Arquivo de configura√ß√£o (webpack.config.js)",
    "color": "purple",
    "description": "Embora o Webpack funcione com configura√ß√µes padr√£o, o arquivo 'webpack.config.js' permite customizar o processo de build. Nele voc√™ define o ponto de entrada (entry), onde o Webpack come√ßa a juntar os m√≥dulos, o ponto de sa√≠da (output), que define onde e com qual nome ser√° salvo o arquivo final, al√©m do modo (development ou production) e plugins/loaders.",
    "example": "module.exports = {\n  entry: './src/index.js',\n  output: {\n    filename: 'bundle.js',\n    path: __dirname + '/dist'\n  },\n  mode: 'development'\n};"
  },
  {
    "number": 5,
    "emoji": "üöÄ",
    "title": "Rodando o Webpack",
    "color": "teal",
    "steps": [
      {
        "command": "npx webpack",
        "description": "Executa o Webpack utilizando a configura√ß√£o padr√£o ou a que estiver especificada no arquivo 'webpack.config.js'. Ele cria o bundle, ou seja, o arquivo final que ser√° usado no navegador."
      },
      {
        "command": "npx webpack --mode production",
        "description": "Executa o Webpack em modo produ√ß√£o, ativando otimiza√ß√µes como minifica√ß√£o (redu√ß√£o do tamanho do arquivo), tree-shaking (remo√ß√£o de c√≥digo n√£o utilizado) e outras t√©cnicas que tornam o c√≥digo final mais leve e r√°pido."
      }
    ]
  },
  {
    "number": 6,
    "emoji": "üîå",
    "title": "Loaders: como usar CSS e outros arquivos",
    "color": "red",
    "description": "Loaders s√£o transformadores que permitem que o Webpack entenda e processe arquivos que n√£o s√£o JavaScript puro, como CSS, imagens, fontes, arquivos TypeScript, entre outros. Eles convertem esses arquivos para um formato que o Webpack consegue incluir no bundle.",
    "example": {
      "webpack.config.js": "module.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: ['style-loader', 'css-loader']\n      }\n    ]\n  }\n};"
    },
    "steps": [
      {
        "command": "npm install --save-dev style-loader css-loader",
        "description": "Instala os loaders necess√°rios para que o Webpack possa processar arquivos CSS, aplicando os estilos diretamente no DOM ou transformando-os em m√≥dulos import√°veis."
      }
    ]
  },
  {
    "number": 7,
    "emoji": "‚ú®",
    "title": "Plugins importantes",
    "color": "yellow",
    "description": "Plugins s√£o extens√µes que adicionam funcionalidades avan√ßadas ao processo de build do Webpack, como gerar automaticamente arquivos HTML que incluam o bundle, limpar diret√≥rios antes de cada build e otimiza√ß√µes extras. Eles operam em um n√≠vel mais amplo que os loaders.",
    "examples": [
      {
        "name": "HtmlWebpackPlugin",
        "description": "Este plugin gera automaticamente um arquivo HTML que inclui o seu bundle JavaScript. Voc√™ pode usar um template HTML personalizado e ele cuida de injetar as tags script necess√°rias, simplificando o gerenciamento dos arquivos.",
        "install": "npm install --save-dev html-webpack-plugin",
        "usage": "const HtmlWebpackPlugin = require('html-webpack-plugin');\n\nmodule.exports = {\n  plugins: [new HtmlWebpackPlugin({template: './src/index.html'})]\n};"
      },
      {
        "name": "CleanWebpackPlugin",
        "description": "Plugin que limpa automaticamente a pasta de sa√≠da ('dist', por exemplo) antes de cada build, evitando que arquivos antigos ou desnecess√°rios fiquem acumulados e causem confus√£o ou erros.",
        "install": "npm install --save-dev clean-webpack-plugin",
        "usage": "const { CleanWebpackPlugin } = require('clean-webpack-plugin');\n\nmodule.exports = {\n  plugins: [new CleanWebpackPlugin()]\n};"
      }
    ]
  },
  {
    "number": 8,
    "emoji": "üëÄ",
    "title": "Modo de Desenvolvimento e Watch Mode",
    "color": "cyan",
    "description": "No modo de desenvolvimento, o Webpack gera mapas de fonte (source maps), que facilitam a depura√ß√£o ao permitir que voc√™ veja o c√≥digo original no navegador, em vez do c√≥digo minificado. O 'watch mode' permite que o Webpack fique de olho nas mudan√ßas nos arquivos fonte e recompila automaticamente quando detecta altera√ß√µes, agilizando o fluxo de trabalho.",
    "steps": [
      {
        "command": "webpack --mode development --watch",
        "description": "Inicia o Webpack no modo desenvolvimento e ativa o watch mode para recompilar automaticamente ao salvar arquivos alterados."
      }
    ]
  },
  {
    "number": 9,
    "emoji": "üìö",
    "title": "Recursos para estudar mais",
    "color": "gray",
    "resources": [
      "Documenta√ß√£o oficial do Webpack: https://webpack.js.org/",
      "Cursos gratuitos e pagos no Udemy, YouTube e plataformas educacionais especializadas",
      "Reposit√≥rios no GitHub com exemplos pr√°ticos de projetos usando Webpack",
      "Artigos e blogs focados em otimiza√ß√µes avan√ßadas e melhores pr√°ticas"
    ]
  }
]
